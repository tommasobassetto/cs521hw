(set-logic ALL)
(set-option :produce-models true)

;; Define the grammar
(declare-var x Real)
(declare-var a Real)
(declare-var b Real)

;; function value
(define-fun absval ((x Real)) Real
  (ite (<= 0 x) x (- x)))

;; Specify the synthesis goal for lower function
(synth-fun lower ((a Real) (b Real)) Real)

;; Assert the specification
(constraint (forall ((x Real) (a Real) (b Real))
              (=> (and (<= a x) (<= x b))
                  (>= (absval x) (lower a b))
                )))

;; Specify the synthesis goal for upper function
(synth-fun upper ((a Real) (b Real)) Real)

;; Assert the specification
(constraint (forall ((x Real) (a Real) (b Real))
              (=> (and (<= a x) (<= x b))
                  (<= (absval x) (upper a b))
                )))


(check-synth)